<Window x:Class="DAW.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:DAW"
       
        mc:Ignorable="d" Height="1000" Width="1280">

    <StackPanel Background="#272537" >
        <Grid Height="100" Background="#a6596e">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"  HorizontalAlignment="Center">
                <xctk:IntegerUpDown x:Name="Bpm" Width="50" Height="50" Watermark="BPM" Background="#272537" 
                                    BorderBrush="{x:Null}" Foreground="WhiteSmoke" Minimum="1" Maximum="240" PreviewTextInput="OnlyNumbers"
                                    MouseWheelActiveTrigger="MouseOver" ValueChanged="Bpm_changed" HorizontalAlignment="Center"/>
               
                <Button Height="50" Width="50" Background="#272537" BorderBrush="{x:Null}" Click="Metronome_Click">
                    <Image Source="C:\Users\Piotr\Desktop\DAW\IMG\Menu.png"/>
                </Button>

                <Button Height="50" Width="50" Background="#272537" BorderBrush="{x:Null}" Click="Play_Click">
                    <Image Source="C:\Users\Piotr\Desktop\DAW\IMG\Menu2.png"/>
                </Button>
            </StackPanel>
        </Grid>

         <StackPanel Orientation="Horizontal">
            
      
            <ScrollViewer Height="280" Margin="50 50 0 0" Width="1040">          
          
           
                <StackPanel Orientation="Vertical" Name="drumPanel">              
                
                    <StackPanel Orientation="Horizontal" Uid="0">
                        <Button Uid="0" Click="LoadSample_Click" Width="80" Height="30" Content="Kick" Margin="10 0 30 0"/>
                        <CheckBox Uid="0" />
                        <CheckBox Uid="1" />
                        <CheckBox Uid="2" />
                        <CheckBox Uid="3" />
                        <CheckBox Uid="4" />
                        <CheckBox Uid="5" />
                        <CheckBox Uid="6" />
                        <CheckBox Uid="7" />                             
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Uid="1">
                        <Button  Uid="1" Click="LoadSample_Click" Width="80" Height="30" Content="Snare" Margin="10 0 30 0"/>
                        <CheckBox Uid="0" />
                        <CheckBox Uid="1" />
                        <CheckBox Uid="2" />
                        <CheckBox Uid="3" />
                        <CheckBox Uid="4" />
                        <CheckBox Uid="5" />
                        <CheckBox Uid="6" />
                        <CheckBox Uid="7" />
                    </StackPanel>


                </StackPanel>
            
            </ScrollViewer>

            <StackPanel Orientation="Vertical"  Margin="35 50 0 0">
                <Button Style="{DynamicResource RoundButton}" BorderBrush="#649bdb" Background="#649bdb" Content="Add Sample"  Click="AddSample_Click"/>
                <Button Style="{DynamicResource RoundButton}" BorderBrush="#649bdb" Background="#649bdb" Content="Delete Sample" Click="DeleteSample_Click"/>
                <Button Style="{DynamicResource RoundButton}" BorderBrush="#649bdb" Background="#649bdb" Content="Add Bars" Click="AddBars_Click"/>
                <Button Style="{DynamicResource RoundButton}" BorderBrush="#649bdb" Background="#649bdb" Content="Delete Bars" Click="DeleteBars_Click"/>
            </StackPanel>
        </StackPanel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Button  Name="_Q" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_2" Style="{DynamicResource BlackKey}" Panel.ZIndex="1" Background="Black"/>
            <Button  Name="_W" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_3" Style="{DynamicResource BlackKey}" Panel.ZIndex="1" Background="Black"/>
            <Button  Name="_E" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_R" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_5" Style="{DynamicResource BlackKey}" Panel.ZIndex="1" Background="Black"/>
            <Button  Name="_T" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_6" Style="{DynamicResource BlackKey}" Panel.ZIndex="1" Background="Black"/>
            <Button  Name="_Y" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_7" Style="{DynamicResource BlackKey}" Panel.ZIndex="1" Background="Black"/>
            <Button  Name="_U" Style="{DynamicResource WhiteKey}" Background="White"/>

            <Button  Name="_Z" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_S" Style="{DynamicResource BlackKey}" Panel.ZIndex="1" Background="Black"/>
            <Button  Name="_X" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_D" Style="{DynamicResource BlackKey}" Panel.ZIndex="1" Background="Black"/>
            <Button  Name="_C" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_V" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_G" Style="{DynamicResource BlackKey}" Panel.ZIndex="1" Background="Black"/>
            <Button  Name="_B" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_H" Style="{DynamicResource BlackKey}" Panel.ZIndex="1" Background="Black"/>
            <Button  Name="_N" Style="{DynamicResource WhiteKey}" Background="White"/>
            <Button  Name="_J" Style="{DynamicResource BlackKey}" Panel.ZIndex="1" Background="Black"/>
            <Button  Name="_M" Style="{DynamicResource WhiteKey}" Background="White"/>

        </StackPanel>

        <StackPanel Orientation="Horizontal">
            
                <ScrollViewer HorizontalScrollBarVisibility="Visible" Height="360" Width="1050" Margin="50" Name="PianoRollScroll">
                <StackPanel Orientation="Horizontal">
                    <Grid Height="2640" Width="50" x:Name="NotesGrid" Background="#623f5d">
                        <Grid.RowDefinitions>
                            <RowDefinition/>

                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>

                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>

                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>

                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>

                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>

                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>

                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>

                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>

                        </Grid.RowDefinitions>
                    </Grid>
                    <Canvas Name="PianoRollCanva" Width="1000" Height="2640"  Background="Transparent"
                MouseLeftButtonDown="AddToRoll" AllowDrop="True" DragOver="Canvas_Drop" Focusable="true">

                        <Grid Name="PianoRollGrid" Width="1000" Height="2640" ShowGridLines="true">
                            <Grid.RowDefinitions>

                                <RowDefinition/>

                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>

                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>

                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>

                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>

                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>

                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>

                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>

                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>

                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>

                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                        </Grid>
                    </Canvas>
                </StackPanel>
            </ScrollViewer>
            <StackPanel>
                <xctk:IntegerUpDown x:Name="RollBars" VerticalAlignment="Top" Margin="0 50" Height="50" Width="50" Background="#272537" DefaultValue="4" Minimum="1" Watermark="4" 
                                BorderBrush="{x:Null}" Foreground="WhiteSmoke" PreviewTextInput="OnlyNumbers"  MouseWheelActiveTrigger="MouseOver" ValueChanged="RollBars_changed"/>

                <ComboBox SelectionChanged="ChangePreset" Name="PresetsCombo" Width="62.5" Height="30" IsEditable="false" IsEnabled="true"/>
                

            </StackPanel>
        </StackPanel>

    </StackPanel>


    


    <Window.Resources>
               
        <Style TargetType="Button" x:Key="RoundButton">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="5" />
                    <Setter Property="Margin" Value="5 10"/>
                    <Setter Property="Width" Value="100"/>
                    <Setter Property="Height" Value="30"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="Button" x:Key="WhiteKey">
            
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="PianoPlay"/>
            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="PianoStop"/>
            <EventSetter Event="PreviewKeyDown" Handler="PianoKeyPlay"/>
            <EventSetter Event="PreviewKeyUp" Handler="PianoKeyStop"/>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="Width" Value="30"/>
                    <Setter Property="Height" Value="100"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="Button" x:Key="BlackKey">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="PianoPlay"/>
            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="PianoStop"/>
            <EventSetter Event="PreviewKeyDown" Handler="PianoKeyPlay"/>
            <EventSetter Event="PreviewKeyUp" Handler="PianoKeyStop"/>
            <Style.Resources>
                <Style TargetType="Border">                               
                    <Setter Property="Width" Value="20"/>
                    <Setter Property="Height" Value="70"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="Margin" Value="-10 0 -10 0"/>      
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="{x:Type CheckBox}">
            <EventSetter Event="Checked" Handler="Drum_checked"/>
            <EventSetter Event="Unchecked" Handler="Drum_unchecked"/>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <StackPanel Orientation="Horizontal" Width="32" Margin="5 5">
                            <Image x:Name="checkboxImage" Source="C:\Users\Piotr\Desktop\DAW\IMG\DrumOff.png" Width="32"/>
                            <ContentPresenter/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkboxImage" Property="Source" Value="C:\Users\Piotr\Desktop\DAW\IMG\DrumOn.png"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="checkboxImage" Property="Source" Value="C:\Users\Piotr\Desktop\DAW\IMG\DrumOn.png"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
</Window>
    
   
